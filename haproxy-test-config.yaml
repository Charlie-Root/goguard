# Fail2Ban Simple Configuration with HAProxy Support

# Production mode: start monitoring from end of existing log files
# Set to false for testing with existing log entries
production_mode: false

log_files:
  - path: "./test/logs/test_haproxy.log"
    patterns:
      # SSL handshake failures - often indicate malicious scanning
      - regex: "haproxy\\[\\d+\\]: (\\d+\\.\\d+\\.\\d+\\.\\d+):\\d+ .* SSL handshake failure"
        ip_group: 1
        threshold: 3
        ban_time: "1h"
      # Connection closed during SSL handshake - suspicious behavior
      - regex: "haproxy\\[\\d+\\]: (\\d+\\.\\d+\\.\\d+\\.\\d+):\\d+ .* Connection closed during SSL handshake"
        ip_group: 1
        threshold: 3
        ban_time: "1h"
      # Multiple 401 Unauthorized responses - brute force attempts
      - regex: "haproxy\\[\\d+\\]: (\\d+\\.\\d+\\.\\d+\\.\\d+):\\d+ .* 401 \\d+"
        ip_group: 1
        threshold: 5
        ban_time: "2h"
      # Multiple 403 Forbidden responses - access attempts to restricted resources
      - regex: "haproxy\\[\\d+\\]: (\\d+\\.\\d+\\.\\d+\\.\\d+):\\d+ .* 403 \\d+"
        ip_group: 1
        threshold: 5
        ban_time: "2h"
      # Multiple 404 Not Found responses - scanning for vulnerabilities
      - regex: "haproxy\\[\\d+\\]: (\\d+\\.\\d+\\.\\d+\\.\\d+):\\d+ .* 404 \\d+"
        ip_group: 1
        threshold: 5
        ban_time: "1h"
      # Multiple 400 Bad Request responses - malformed requests
      - regex: "haproxy\\[\\d+\\]: (\\d+\\.\\d+\\.\\d+\\.\\d+):\\d+ .* 400 \\d+"
        ip_group: 1
        threshold: 8
        ban_time: "1h"

web:
  enabled: false
  port: 8080

whitelist:
  - "127.0.0.1"
  - "::1"
  - "192.168.1.0/24"